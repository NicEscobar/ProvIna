{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\proviiina\\\\ProvIna\\\\mobile\\\\src\\\\pages\\\\NewPost.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, ListItem, Button, Icon } from \"react-native-elements\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport api from \"../api/api\";\n\nfunction NewPost(_ref) {\n  var navigation = _ref.navigation;\n  var IdAluno = navigation.state.params.IdAluno;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      nomeArquivo = _useState2[0],\n      setNomeArquivo = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      categoria = _useState4[0],\n      setCategoria = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      photo = _useState6[0],\n      setPhoto = _useState6[1];\n\n  function EnviarArquivo(base64EncodedImage) {\n    return _regeneratorRuntime.async(function EnviarArquivo$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(api.post(\"/arquivo\", {\n              headers: {\n                Authorization: \"\",\n                \"Content-type\": \"application/json\"\n              },\n              Data: base64EncodedImage,\n              NomeArquivo: nomeArquivo,\n              Categoria: categoria,\n              IdAluno_Arquivos: IdAluno\n            }));\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  }\n\n  return React.createElement(View, {\n    style: styles.newPostPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(Card, {\n    containerStyle: styles.cardBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.newPostHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.titles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Nova Postagem\")), React.createElement(View, {\n    style: styles.newPostBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.sendFileButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, React.createElement(FontAwesome, {\n    name: \"download\",\n    size: 90,\n    style: styles.btnNewItemDesign,\n    color: \"#FFF\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, React.createElement(Text, {\n    style: styles.titles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, \"Selecione o Arquivo\"))))), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: styles.newPostFooter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"ENVIAR\",\n    size: \"sm\",\n    type: \"outline\",\n    color: \"(255, 255, 255, 0)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  newPostPage: {\n    flex: 1,\n    justifyContent: \"flex-start\",\n    backgroundColor: \"#000\"\n  },\n  cardBox: {\n    borderRadius: 4,\n    backgroundColor: \"rgb(18,18,18)\",\n    padding: 0,\n    width: 600,\n    height: 250,\n    width: \"100%\",\n    alignItems: \"center\"\n  },\n  newPostHeader: {\n    flex: 1,\n    alignItems: \"center\",\n    margin: 5\n  },\n  sendFileButton: {\n    backgroundColor: \"#000\"\n  },\n  newPostBody: {\n    flex: 2,\n    padding: 5,\n    textAlign: \"center\"\n  },\n  newPostFooter: {\n    color: \"#00000000\",\n    justifyContent: 'center',\n    marginHorizontal: 80,\n    marginVertical: 20,\n    paddingVertical: 10,\n    paddingHorizontal: 10,\n    borderColor: '#03DAC6'\n  },\n  titles: {\n    fontSize: 30,\n    color: \"#fff\"\n  }\n});\nexport default NewPost;","map":{"version":3,"sources":["D:/proviiina/ProvIna/mobile/src/pages/NewPost.js"],"names":["React","useState","useEffect","Card","ListItem","Button","Icon","FontAwesome","api","NewPost","navigation","IdAluno","state","params","nomeArquivo","setNomeArquivo","categoria","setCategoria","photo","setPhoto","EnviarArquivo","base64EncodedImage","post","headers","Authorization","Data","NomeArquivo","Categoria","IdAluno_Arquivos","console","error","styles","newPostPage","cardBox","newPostHeader","titles","newPostBody","sendFileButton","btnNewItemDesign","newPostFooter","StyleSheet","create","flex","justifyContent","backgroundColor","borderRadius","padding","width","height","alignItems","margin","textAlign","color","marginHorizontal","marginVertical","paddingVertical","paddingHorizontal","borderColor","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Card, ListItem, Button, Icon } from \"react-native-elements\";\r\n\r\n//import DocumentPicker from 'react-native-document-picker';\r\n\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  View,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  Image,\r\n  Linking,\r\n} from \"react-native\";\r\n\r\n//import { set } from \"react-native-reanimated\";\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\n\r\nimport api from \"../api/api\";\r\n\r\nfunction NewPost({ navigation }) {\r\n  const { IdAluno } = navigation.state.params;\r\n\r\n  const [nomeArquivo, setNomeArquivo] = useState(\"\");\r\n  const [categoria, setCategoria] = useState(\"\");\r\n\r\n  const [photo, setPhoto] = useState([]);\r\n\r\n  async function EnviarArquivo(base64EncodedImage) {\r\n    try {\r\n      await api.post(\"/arquivo\", {\r\n        headers: {\r\n          Authorization: \"\",\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n\r\n        Data: base64EncodedImage,\r\n        NomeArquivo: nomeArquivo,\r\n        Categoria: categoria,\r\n        IdAluno_Arquivos: IdAluno,\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={styles.newPostPage}>\r\n      <Card containerStyle={styles.cardBox}>\r\n        <View style={styles.newPostHeader}>\r\n          <Text style={styles.titles}>Nova Postagem</Text>\r\n        </View>\r\n\r\n        <View style={styles.newPostBody}>\r\n          <View style={styles.sendFileButton}>\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n              }}\r\n            >\r\n              <FontAwesome\r\n                name=\"download\"\r\n                size={90}\r\n                style={styles.btnNewItemDesign}\r\n                color=\"#FFF\"\r\n              >\r\n                <Text style={styles.titles}>Selecione o Arquivo</Text>\r\n              </FontAwesome>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n        <View>\r\n    \r\n        </View>\r\n        <View style={styles.newPostFooter}>\r\n          <Button\r\n            title=\"ENVIAR\"\r\n            size=\"sm\"\r\n            type=\"outline\"\r\n            color=\"(255, 255, 255, 0)\"\r\n          />\r\n        </View>\r\n      </Card>\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  newPostPage: {\r\n    flex: 1,\r\n    justifyContent: \"flex-start\",\r\n    backgroundColor: \"#000\",\r\n  },\r\n  cardBox: {\r\n    borderRadius: 4,\r\n    backgroundColor: \"rgb(18,18,18)\",\r\n    padding: 0,\r\n    width: 600,\r\n    height: 250,\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n  },\r\n  newPostHeader: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    margin: 5,\r\n  },\r\n  sendFileButton: {\r\n    backgroundColor: \"#000\",\r\n  },\r\n  newPostBody: {\r\n    flex: 2,\r\n    padding: 5,\r\n    textAlign: \"center\",\r\n  },\r\n  newPostFooter: {\r\n    color: \"#00000000\",\r\n    justifyContent: 'center',\r\n    marginHorizontal: 80,\r\n    marginVertical: 20,\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 10,\r\n    borderColor: '#03DAC6',\r\n  },\r\n  titles: {\r\n    fontSize: 30,\r\n    color: \"#fff\",\r\n  },\r\n});\r\n\r\nexport default NewPost;\r\n"]},"metadata":{},"sourceType":"module"}