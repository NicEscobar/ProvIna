{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\proviiina\\\\ProvIna\\\\mobile\\\\src\\\\pages\\\\NewPost.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, ListItem, Button, Icon } from \"react-native-elements\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { set } from \"react-native-reanimated\";\nimport api from \"../api/api\";\n\nfunction NewPost(_ref) {\n  var navigation = _ref.navigation;\n  var IdAluno = navigation.state.params.IdAluno;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      nomeArquivo = _useState2[0],\n      setNomeArquivo = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      categoria = _useState4[0],\n      setCategoria = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedFile = _useState6[0],\n      setSelectedFile = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      previewSource = _useState8[0],\n      setPreviewSource = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      fileInputState = _useState10[0],\n      setFileInputState = _useState10[1];\n\n  var handleSubmitFile = function handleSubmitFile(e) {\n    e.preventDefault();\n    if (!previewSource) return;\n    EnviarArquivo(previewSource);\n  };\n\n  function EnviarArquivo(base64EncodedImage) {\n    return _regeneratorRuntime.async(function EnviarArquivo$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(api.post('/arquivo', {\n              headers: {\n                'Authorization': '',\n                'Content-type': 'application/json'\n              },\n              Data: base64EncodedImage,\n              NomeArquivo: nomeArquivo,\n              Categoria: categoria,\n              IdAluno_Arquivos: IdAluno\n            }));\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  }\n\n  return React.createElement(View, {\n    style: styles.newPostPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, React.createElement(Card, {\n    containerStyle: styles.cardBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.newPostHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.newPostBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.newPostFooter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  newPostPage: {\n    flex: 1,\n    justifyContent: \"center\",\n    backgroundColor: \"#000\"\n  },\n  cardBox: {\n    borderRadius: 4,\n    borderColor: \"trasparent\",\n    backgroundColor: \"rgb(18,18,18)\",\n    padding: 0\n  }\n});\nexport default NewPost;","map":{"version":3,"sources":["D:/proviiina/ProvIna/mobile/src/pages/NewPost.js"],"names":["React","useState","useEffect","Card","ListItem","Button","Icon","set","api","NewPost","navigation","IdAluno","state","params","nomeArquivo","setNomeArquivo","categoria","setCategoria","selectedFile","setSelectedFile","previewSource","setPreviewSource","fileInputState","setFileInputState","handleSubmitFile","e","preventDefault","EnviarArquivo","base64EncodedImage","post","headers","Data","NomeArquivo","Categoria","IdAluno_Arquivos","console","error","styles","newPostPage","cardBox","newPostHeader","newPostBody","newPostFooter","StyleSheet","create","flex","justifyContent","backgroundColor","borderRadius","borderColor","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Card, ListItem, Button, Icon } from \"react-native-elements\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  View,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  Image,\r\n  Linking,\r\n} from \"react-native\";\r\nimport { set } from \"react-native-reanimated\";\r\n\r\nimport api from \"../api/api\";\r\n\r\nfunction NewPost({ navigation }){\r\n\r\n    const { IdAluno}  = navigation.state.params;\r\n\r\n    const [nomeArquivo, setNomeArquivo] = useState('');\r\n    const [categoria, setCategoria] = useState('');\r\n\r\n    const [selectedFile, setSelectedFile] = useState('');\r\n    const [previewSource, setPreviewSource] = useState();\r\n    const [fileInputState, setFileInputState] = useState('');\r\n\r\n    const handleSubmitFile = (e) => {\r\n        e.preventDefault();\r\n    \r\n        if (!previewSource) return;\r\n        EnviarArquivo(previewSource);\r\n    }\r\n\r\n\r\n\r\n    async function EnviarArquivo(base64EncodedImage) {\r\n\r\n        try {\r\n    \r\n          await api.post('/arquivo', {\r\n    \r\n            headers: {\r\n              'Authorization': '',\r\n              'Content-type': 'application/json'\r\n            },\r\n    \r\n            Data: base64EncodedImage,\r\n            NomeArquivo: nomeArquivo,\r\n            Categoria: categoria,\r\n            IdAluno_Arquivos: IdAluno\r\n    \r\n          });\r\n    \r\n        } catch (error) {\r\n          console.error(error);\r\n        } \r\n    \r\n    }\r\n\r\n\r\n    return (\r\n      <View style={styles.newPostPage}>\r\n        <Card containerStyle={styles.cardBox}>\r\n          <View style={styles.newPostHeader}>\r\n\r\n          </View>\r\n          <View style={styles.newPostBody}></View>\r\n          <View style={styles.newPostFooter}></View>\r\n        </Card>\r\n      </View>\r\n    )\r\n}\r\nconst styles = StyleSheet.create({\r\n  newPostPage: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#000\",\r\n  },\r\n  cardBox: {\r\n    borderRadius: 4,\r\n    borderColor: \"trasparent\",\r\n    backgroundColor: \"rgb(18,18,18)\",\r\n    padding: 0,\r\n  },\r\n\r\n});\r\n\r\nexport default NewPost;"]},"metadata":{},"sourceType":"module"}