{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\proviiina\\\\ProvIna\\\\mobile\\\\src\\\\pages\\\\NewPost.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport axios from 'axios';\nimport React, { Component } from 'react';\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      selectedFile: null\n    };\n\n    _this.onFileChange = function (event) {\n      _this.setState({\n        selectedFile: event.target.files[0]\n      });\n    };\n\n    _this.onFileUpload = function () {\n      var formData = new FormData();\n      formData.append(\"myFile\", _this.state.selectedFile, _this.state.selectedFile.name);\n      console.log(_this.state.selectedFile);\n      axios.post(\"api/uploadfile\", formData);\n    };\n\n    _this.fileData = function () {\n      if (_this.state.selectedFile) {\n        return React.createElement(\"div\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }\n        }, React.createElement(\"h2\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }\n        }, \"File Details:\"), React.createElement(\"p\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 1\n          }\n        }, \"File Name: \", _this.state.selectedFile.name), React.createElement(\"p\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 1\n          }\n        }, \"File Type: \", _this.state.selectedFile.type), React.createElement(\"p\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 1\n          }\n        }, \"Last Modified:\", \" \", _this.state.selectedFile.lastModifiedDate.toDateString()));\n      } else {\n        return React.createElement(\"div\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }\n        }, React.createElement(\"br\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }\n        }), React.createElement(\"h4\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }\n        }, \"Choose before Pressing the Upload button\"));\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }, React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, \"GeeksforGeeks\"), React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }, \"File Upload using React!\"), React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.onFileChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }), React.createElement(\"button\", {\n        onClick: this.onFileUpload,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, \"Upload!\")), this.fileData());\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["D:/proviiina/ProvIna/mobile/src/pages/NewPost.js"],"names":["axios","React","Component","App","state","selectedFile","onFileChange","event","setState","target","files","onFileUpload","formData","FormData","append","name","console","log","post","fileData","type","lastModifiedDate","toDateString"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,IAAcC,SAAd,QAA8B,OAA9B;;IAEMC,G;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AAGNC,MAAAA,YAAY,EAAE;AAHR,K;;UAORC,Y,GAAe,UAAAC,KAAK,EAAI;AAGtB,YAAKC,QAAL,CAAc;AAAEH,QAAAA,YAAY,EAAEE,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB;AAAhB,OAAd;AAED,K;;UAGDC,Y,GAAe,YAAM;AAGnB,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AAGAD,MAAAA,QAAQ,CAACE,MAAT,CACE,QADF,EAEE,MAAKV,KAAL,CAAWC,YAFb,EAGE,MAAKD,KAAL,CAAWC,YAAX,CAAwBU,IAH1B;AAOAC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAKb,KAAL,CAAWC,YAAvB;AAIAL,MAAAA,KAAK,CAACkB,IAAN,CAAW,gBAAX,EAA6BN,QAA7B;AACD,K;;UAIDO,Q,GAAW,YAAM;AAEf,UAAI,MAAKf,KAAL,CAAWC,YAAf,EAA6B;AAE3B,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAGV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAe,MAAKD,KAAL,CAAWC,YAAX,CAAwBU,IAAvC,CAHU,EAMV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAe,MAAKX,KAAL,CAAWC,YAAX,CAAwBe,IAAvC,CANU,EASV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAC6B,GAD7B,EAEe,MAAKhB,KAAL,CAAWC,YAAX,CAAwBgB,gBAAxB,CAAyCC,YAAzC,EAFf,CATU,CADF;AAiBD,OAnBD,MAmBO;AACL,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAFF,CADF;AAMD;AACF,K;;;;;;;WAED,kBAAS;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAJJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKhB,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAQ,QAAA,OAAO,EAAE,KAAKK,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,CAPJ,EAaG,KAAKQ,QAAL,EAbH,CADF;AAiBD;;;;EAzFajB,S;;AA4FhB,eAAeC,GAAf","sourcesContent":["import axios from 'axios';\r\n \r\nimport React,{Component} from 'react';\r\n \r\nclass App extends Component {\r\n  \r\n    state = {\r\n \r\n      // Initially, no file is selected\r\n      selectedFile: null\r\n    };\r\n    \r\n    // On file select (from the pop up)\r\n    onFileChange = event => {\r\n    \r\n      // Update the state\r\n      this.setState({ selectedFile: event.target.files[0] });\r\n    \r\n    };\r\n    \r\n    // On file upload (click the upload button)\r\n    onFileUpload = () => {\r\n    \r\n      // Create an object of formData\r\n      const formData = new FormData();\r\n    \r\n      // Update the formData object\r\n      formData.append(\r\n        \"myFile\",\r\n        this.state.selectedFile,\r\n        this.state.selectedFile.name\r\n      );\r\n    \r\n      // Details of the uploaded file\r\n      console.log(this.state.selectedFile);\r\n    \r\n      // Request made to the backend api\r\n      // Send formData object\r\n      axios.post(\"api/uploadfile\", formData);\r\n    };\r\n    \r\n    // File content to be displayed after\r\n    // file upload is complete\r\n    fileData = () => {\r\n    \r\n      if (this.state.selectedFile) {\r\n         \r\n        return (\r\n          <div>\r\n            <h2>File Details:</h2>\r\n             \r\n<p>File Name: {this.state.selectedFile.name}</p>\r\n \r\n             \r\n<p>File Type: {this.state.selectedFile.type}</p>\r\n \r\n             \r\n<p>\r\n              Last Modified:{\" \"}\r\n              {this.state.selectedFile.lastModifiedDate.toDateString()}\r\n            </p>\r\n \r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div>\r\n            <br />\r\n            <h4>Choose before Pressing the Upload button</h4>\r\n          </div>\r\n        );\r\n      }\r\n    };\r\n    \r\n    render() {\r\n    \r\n      return (\r\n        <div>\r\n            <h1>\r\n              GeeksforGeeks\r\n            </h1>\r\n            <h3>\r\n              File Upload using React!\r\n            </h3>\r\n            <div>\r\n                <input type=\"file\" onChange={this.onFileChange} />\r\n                <button onClick={this.onFileUpload}>\r\n                  Upload!\r\n                </button>\r\n            </div>\r\n          {this.fileData()}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n \r\n  export default App;"]},"metadata":{},"sourceType":"module"}