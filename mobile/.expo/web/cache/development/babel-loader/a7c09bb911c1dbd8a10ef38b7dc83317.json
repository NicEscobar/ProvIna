{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\ProvIna\\\\mobile\\\\src\\\\pages\\\\NewPost.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, ListItem, Button, Icon } from \"react-native-elements\";\nimport { launchImageLibrary } from 'react-native-image-picker';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { set } from \"react-native-reanimated\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport api from \"../api/api\";\n\nfunction NewPost(_ref) {\n  var navigation = _ref.navigation;\n  var IdAluno = navigation.state.params.IdAluno;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      nomeArquivo = _useState2[0],\n      setNomeArquivo = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      categoria = _useState4[0],\n      setCategoria = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedFile = _useState6[0],\n      setSelectedFile = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      previewSource = _useState8[0],\n      setPreviewSource = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      fileInputState = _useState10[0],\n      setFileInputState = _useState10[1];\n\n  function handleChoosePhoto() {\n    var option = {\n      noData: true\n    };\n    ImagePicker.launchImageLibrary(option, function (response) {\n      console.log(\"response\", response);\n    });\n  }\n\n  function EnviarArqiuvo(base64EncodedImage) {\n    return _regeneratorRuntime.async(function EnviarArqiuvo$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(api.post('/arquivo', {\n              headers: {\n                'Authorization': '',\n                'Content-type': 'application/json'\n              },\n              Data: base64EncodedImage,\n              NomeArquivo: nomeArquivo,\n              Categoria: categoria,\n              IdAluno_Arquivos: IdAluno\n            }));\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  }\n\n  return React.createElement(View, {\n    style: styles.newPostPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, React.createElement(Card, {\n    containerStyle: styles.cardBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.newPostHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.titles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Nova Postagem\")), React.createElement(View, {\n    style: styles.newPostBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.sendFileButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      handleChoosePhoto();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, React.createElement(FontAwesome, {\n    name: \"download\",\n    size: 90,\n    style: styles.btnNewItemDesign,\n    color: \"#FFF\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: styles.titles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, \"Selecione o Arquivo\")))), React.createElement(View, {\n    style: styles.newPostFooter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"Enviar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  newPostPage: {\n    flex: 1,\n    justifyContent: \"flex-start\",\n    backgroundColor: \"#000\"\n  },\n  cardBox: {\n    borderRadius: 4,\n    borderColor: \"trasparent\",\n    backgroundColor: \"rgb(18,18,18)\",\n    padding: 0\n  },\n  newPostHeader: {\n    flex: 1,\n    alignItems: \"center\",\n    padding: 5\n  },\n  sendFileButton: {\n    backgroundColor: \"#000\"\n  },\n  newPostBody: {\n    flex: 2,\n    padding: 5\n  },\n  newPostFooter: {\n    flex: 1,\n    alignItems: \"flex-end\",\n    padding: 5\n  },\n  titles: {\n    fontSize: 30,\n    color: \"#fff\"\n  }\n});\nexport default NewPost;","map":{"version":3,"sources":["C:/ProvIna/mobile/src/pages/NewPost.js"],"names":["React","useState","useEffect","Card","ListItem","Button","Icon","launchImageLibrary","set","FontAwesome","api","NewPost","navigation","IdAluno","state","params","nomeArquivo","setNomeArquivo","categoria","setCategoria","selectedFile","setSelectedFile","previewSource","setPreviewSource","fileInputState","setFileInputState","handleChoosePhoto","option","noData","ImagePicker","response","console","log","EnviarArqiuvo","base64EncodedImage","post","headers","Data","NomeArquivo","Categoria","IdAluno_Arquivos","error","styles","newPostPage","cardBox","newPostHeader","titles","newPostBody","sendFileButton","btnNewItemDesign","newPostFooter","StyleSheet","create","flex","justifyContent","backgroundColor","borderRadius","borderColor","padding","alignItems","fontSize","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Card, ListItem, Button, Icon } from \"react-native-elements\";\r\n\r\nimport {launchImageLibrary} from 'react-native-image-picker';\r\n\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  View,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  Image,\r\n  Linking,\r\n} from \"react-native\";\r\n\r\nimport { set } from \"react-native-reanimated\";\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\n\r\n\r\nimport api from '../api/api';\r\n\r\nfunction NewPost({ navigation }) {\r\n  const { IdAluno } = navigation.state.params;\r\n\r\n  const [nomeArquivo, setNomeArquivo] = useState(\"\");\r\n  const [categoria, setCategoria] = useState(\"\");\r\n\r\n  const [selectedFile, setSelectedFile] = useState(\"\");\r\n  const [previewSource, setPreviewSource] = useState();\r\n  const [fileInputState, setFileInputState] = useState(\"\");\r\n\r\n    \r\n  function handleChoosePhoto(){\r\n    \r\n      const option = {\r\n        noData: true\r\n      };\r\n\r\n      ImagePicker.launchImageLibrary(option, response => {\r\n        console.log(\"response\", response)\r\n\r\n      });\r\n    } \r\n  \r\n    async function EnviarArqiuvo(base64EncodedImage) {\r\n\r\n        try {\r\n    \r\n          await api.post('/arquivo', {\r\n    \r\n            headers: {\r\n              'Authorization': '',\r\n              'Content-type': 'application/json'\r\n            },\r\n    \r\n            Data: base64EncodedImage,\r\n            NomeArquivo: nomeArquivo,\r\n            Categoria: categoria,\r\n            IdAluno_Arquivos: IdAluno\r\n    \r\n          });\r\n    \r\n        } catch (error) {\r\n          console.error(error);\r\n        } \r\n    \r\n    }\r\n\r\n  return (\r\n    <View style={styles.newPostPage}>\r\n      <Card containerStyle={styles.cardBox}>\r\n        <View style={styles.newPostHeader}>\r\n          <Text style={styles.titles}>Nova Postagem</Text>\r\n        </View>\r\n        <View style={styles.newPostBody}>\r\n          <View style={styles.sendFileButton}>\r\n            <TouchableOpacity\r\n              onPress={() => { handleChoosePhoto()\r\n              }}\r\n            >\r\n              <FontAwesome\r\n                name=\"download\"\r\n                size={90}\r\n                style={styles.btnNewItemDesign}\r\n                color= \"#FFF\"\r\n              ></FontAwesome>\r\n              <Text style={styles.titles}>Selecione o Arquivo</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n\r\n        <View style={styles.newPostFooter}>\r\n          <Button title=\"Enviar\"></Button>\r\n        </View>\r\n      </Card>\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  newPostPage: {\r\n    flex: 1,\r\n    justifyContent: \"flex-start\",\r\n    backgroundColor: \"#000\",\r\n  },\r\n  cardBox: {\r\n    borderRadius: 4,\r\n    borderColor: \"trasparent\",\r\n    backgroundColor: \"rgb(18,18,18)\",\r\n    padding: 0,\r\n  },\r\n  newPostHeader: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    padding: 5,\r\n  },\r\n  sendFileButton: {\r\n    backgroundColor: \"#000\",\r\n  },\r\n  newPostBody: {\r\n    flex: 2,\r\n    padding: 5,\r\n  },\r\n  newPostFooter: {\r\n    flex: 1,\r\n    alignItems: \"flex-end\",\r\n    padding: 5,\r\n  },\r\n  titles: {\r\n    fontSize: 30,\r\n    color: \"#fff\",\r\n  },\r\n});\r\n\r\nexport default NewPost;\r\n"]},"metadata":{},"sourceType":"module"}