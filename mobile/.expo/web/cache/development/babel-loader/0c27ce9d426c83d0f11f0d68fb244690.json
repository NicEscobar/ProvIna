{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\ProvIna\\\\mobile\\\\src\\\\pages\\\\NewPost.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\n\nfunction NewPost() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      previewSource = _useState2[0],\n      setPreviewSource = _useState2[1];\n\n  var handleSubmitFile = function handleSubmitFile(e) {\n    e.preventDefault();\n    if (!previewSource) return;\n    EnviarArquivo(previewSource);\n  };\n\n  function EnviarArquivo(base64EncodedImage) {\n    return _regeneratorRuntime.async(function EnviarArquivo$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(api.post('/arquivo', {\n              headers: {\n                'Authorization': '',\n                'Content-type': 'application/json'\n              },\n              Data: base64EncodedImage,\n              NomeArquivo: nomeArquivo,\n              Categoria: categoria,\n              IdAluno_Arquivos: idAluno\n            }));\n\n          case 3:\n            _context.next = 8;\n            break;\n\n          case 5:\n            _context.prev = 5;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  }\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }\n  });\n}\n\nexport default NewPost;","map":{"version":3,"sources":["C:/ProvIna/mobile/src/pages/NewPost.js"],"names":["React","NewPost","useState","previewSource","setPreviewSource","handleSubmitFile","e","preventDefault","EnviarArquivo","base64EncodedImage","api","post","headers","Data","NomeArquivo","nomeArquivo","Categoria","categoria","IdAluno_Arquivos","idAluno","console","error"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,SAASC,OAAT,GAAkB;AAEd,kBAA0CC,QAAQ,EAAlD;AAAA;AAAA,MAAOC,aAAP;AAAA,MAAsBC,gBAAtB;;AAEA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,CAAD,EAAO;AAC5BA,IAAAA,CAAC,CAACC,cAAF;AAEA,QAAI,CAACJ,aAAL,EAAoB;AACpBK,IAAAA,aAAa,CAACL,aAAD,CAAb;AACH,GALD;;AAOA,WAAeK,aAAf,CAA6BC,kBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAIYC,GAAG,CAACC,IAAJ,CAAS,UAAT,EAAqB;AAEzBC,cAAAA,OAAO,EAAE;AACP,iCAAiB,EADV;AAEP,gCAAgB;AAFT,eAFgB;AAOzBC,cAAAA,IAAI,EAAEJ,kBAPmB;AAQzBK,cAAAA,WAAW,EAAEC,WARY;AASzBC,cAAAA,SAAS,EAAEC,SATc;AAUzBC,cAAAA,gBAAgB,EAAEC;AAVO,aAArB,CAJZ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAmBMC,YAAAA,OAAO,CAACC,KAAR;;AAnBN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA2BA,SAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACH;;AAED,eAAepB,OAAf","sourcesContent":["import React from 'react';\r\nimport {View} from  'react-native';\r\n\r\nfunction NewPost(){\r\n\r\n    const [previewSource, setPreviewSource] = useState();\r\n\r\n    const handleSubmitFile = (e) => {\r\n        e.preventDefault();\r\n    \r\n        if (!previewSource) return;\r\n        EnviarArquivo(previewSource);\r\n    }\r\n\r\n    async function EnviarArquivo(base64EncodedImage) {\r\n\r\n        try {\r\n    \r\n          await api.post('/arquivo', {\r\n    \r\n            headers: {\r\n              'Authorization': '',\r\n              'Content-type': 'application/json'\r\n            },\r\n    \r\n            Data: base64EncodedImage,\r\n            NomeArquivo: nomeArquivo,\r\n            Categoria: categoria,\r\n            IdAluno_Arquivos: idAluno\r\n    \r\n          });\r\n    \r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n    \r\n    \r\n    \r\n    }\r\n\r\n\r\n    return <View />\r\n}\r\n\r\nexport default NewPost;"]},"metadata":{},"sourceType":"module"}