{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\proviiina\\\\ProvIna\\\\mobile\\\\src\\\\pages\\\\Comment.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, ListItem, Button, Icon } from \"react-native-elements\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { set } from \"react-native-reanimated\";\nimport api from \"../api/api\";\n\nfunction Comment(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      post = _useState2[0],\n      setPost = _useState2[1];\n\n  var _navigation$state$par = navigation.state.params,\n      IdArquivos = _navigation$state$par.IdArquivos,\n      IdAluno = _navigation$state$par.IdAluno;\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      comentario = _useState4[0],\n      setComentario = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      todosComentarios = _useState6[0],\n      setTodosComentarios = _useState6[1];\n\n  function SalvarComentario() {\n    return _regeneratorRuntime.async(function SalvarComentario$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(api.post(\"/Comentario\", {\n              Texto: comentario,\n              IdAluno: IdAluno,\n              IdArquivo: IdArquivos\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    function BuscarArquivo() {\n      var respArquivo;\n      return _regeneratorRuntime.async(function BuscarArquivo$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(api.get(\"/arquivo/\" + IdArquivos, {}));\n\n            case 2:\n              respArquivo = _context2.sent;\n              setPost(respArquivo.data[0]);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    function BuscarComentarios() {\n      var respComent;\n      return _regeneratorRuntime.async(function BuscarComentarios$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(api.get(\"/Comentario/\" + IdArquivos, {}));\n\n            case 2:\n              respComent = _context3.sent;\n              setTodosComentarios(respComent.data);\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    BuscarArquivo();\n    BuscarComentarios();\n  }, [comentario, post.URLs]);\n  return React.createElement(View, {\n    style: styles.commentPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, React.createElement(Card, {\n    style: styles.cardBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.createCommentHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.titles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \" Criar coment\\xE1rio \")), React.createElement(View, {\n    style: styles.createCommentBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.createCommentFooter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.commentHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.commentBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.commentFooter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar styles = StyleSheet.create({\n  commentPage: {\n    flex: 1,\n    justifyContent: \"flex-start\",\n    backgroundColor: \"000\"\n  },\n  cardBox: {\n    borderRadius: 4,\n    borderColor: \"trasparent\",\n    backgroundColor: \"rgb(18,18,18)\",\n    padding: 0\n  },\n  createCommentBody: {},\n  titles: {\n    fontSize: 30,\n    color: \"black\"\n  }\n});\nexport default Comment;","map":{"version":3,"sources":["D:/proviiina/ProvIna/mobile/src/pages/Comment.js"],"names":["React","useState","useEffect","Card","ListItem","Button","Icon","set","api","Comment","navigation","post","setPost","state","params","IdArquivos","IdAluno","comentario","setComentario","todosComentarios","setTodosComentarios","SalvarComentario","Texto","IdArquivo","BuscarArquivo","get","respArquivo","data","BuscarComentarios","respComent","URLs","styles","commentPage","cardBox","createCommentHeader","titles","createCommentBody","createCommentFooter","commentHeader","commentBody","commentFooter","StyleSheet","create","flex","justifyContent","backgroundColor","borderRadius","borderColor","padding","fontSize","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Card, ListItem, Button, Icon } from \"react-native-elements\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  View,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  Image,\r\n  Linking,\r\n} from \"react-native\";\r\nimport { set } from \"react-native-reanimated\";\r\n\r\nimport api from \"../api/api\";\r\n\r\nfunction Comment({ navigation }) {\r\n  const [post, setPost] = useState([]);\r\n\r\n  const { IdArquivos, IdAluno } = navigation.state.params;\r\n\r\n  const [comentario, setComentario] = useState(\"\");\r\n  const [todosComentarios, setTodosComentarios] = useState([]);\r\n\r\n  async function SalvarComentario() {\r\n    await api.post(\"/Comentario\", {\r\n      Texto: comentario,\r\n      IdAluno: IdAluno,\r\n      IdArquivo: IdArquivos,\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function BuscarArquivo() {\r\n      const respArquivo = await api.get(\"/arquivo/\" + IdArquivos, {});\r\n      setPost(respArquivo.data[0]);\r\n    }\r\n\r\n    async function BuscarComentarios() {\r\n      const respComent = await api.get(\"/Comentario/\" + IdArquivos, {});\r\n\r\n      setTodosComentarios(respComent.data);\r\n    }\r\n\r\n    BuscarArquivo();\r\n    BuscarComentarios();\r\n  }, [comentario, post.URLs]);\r\n\r\n  return (\r\n    <View style={styles.commentPage}>\r\n      <Card style={styles.cardBox}>\r\n        <View style={styles.createCommentHeader}>\r\n          <Text style={styles.titles}> Criar comentário </Text>\r\n        </View>\r\n        <View style={styles.createCommentBody}>\r\n          <TextInput></TextInput>\r\n        </View>\r\n\r\n        <View style={styles.createCommentFooter}></View>\r\n      </Card>\r\n\r\n      <View style={styles.commentHeader}></View>\r\n      <View style={styles.commentBody}></View>\r\n      <View style={styles.commentFooter}></View>\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  commentPage: {\r\n    flex: 1,\r\n    justifyContent: \"flex-start\",\r\n    backgroundColor: \"000\",\r\n  },\r\n  cardBox: {\r\n    borderRadius: 4,\r\n    borderColor: \"trasparent\",\r\n    backgroundColor: \"rgb(18,18,18)\",\r\n    padding: 0,\r\n  },\r\n  createCommentBody: {\r\n  },\r\n  titles: {\r\n    fontSize: 30,\r\n    color: \"black\",\r\n  },\r\n});\r\n\r\nexport default Comment;\r\n"]},"metadata":{},"sourceType":"module"}