{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\ProvIna\\\\mobile\\\\src\\\\pages\\\\NewPost.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Constants from \"expo-constants\";\nimport * as Permissions from \"expo-permissions\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport Axios from \"axios\";\nexport default function Upload() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      avatar = _useState2[0],\n      setAvatar = _useState2[1];\n\n  function imagePickerCall() {\n    var _await$Permissions$as, status, data;\n\n    return _regeneratorRuntime.async(function imagePickerCall$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!Constants.platform.ios) {\n              _context.next = 8;\n              break;\n            }\n\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA_ROLL));\n\n          case 3:\n            _await$Permissions$as = _context.sent;\n            status = _await$Permissions$as.status;\n\n            if (!(status !== \"granted\")) {\n              _context.next = 8;\n              break;\n            }\n\n            alert(\"Nós precisamos dessa permissão.\");\n            return _context.abrupt(\"return\");\n\n          case 8:\n            _context.next = 10;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All\n            }));\n\n          case 10:\n            data = _context.sent;\n\n            if (!data.cancelled) {\n              _context.next = 13;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 13:\n            if (data.uri) {\n              _context.next = 15;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 15:\n            setAvatar(data);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function EnviarArquivo() {\n    return _regeneratorRuntime.async(function EnviarArquivo$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(api.post('/arquivo', {\n              headers: {\n                'Authorization': token,\n                'Content-type': 'application/json'\n              },\n              Data: avatar.uri,\n              NomeArquivo: nomeArquivo,\n              Categoria: categoria,\n              IdAluno_Arquivos: idAluno\n            }));\n\n          case 3:\n            _context2.next = 8;\n            break;\n\n          case 5:\n            _context2.prev = 5;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error(_context2.t0);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  }\n\n  function uploadImage() {\n    var data;\n    return _regeneratorRuntime.async(function uploadImage$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            data = new FormData();\n            data.append(\"avatar\", {\n              uri: avatar.uri,\n              type: avatar.type\n            });\n            console.log(\"data\", data);\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: avatar ? avatar.uri : \"https://mltmpgeox6sf.i.optimole.com/w:761/h:720/q:auto/https://redbanksmilesnj.com/wp-content/uploads/2015/11/man-avatar-placeholder.png\"\n    },\n    style: styles.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: imagePickerCall,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"Escolher imagem\")), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: uploadImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"Enviar imagem\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  button: {\n    width: 150,\n    height: 50,\n    borderRadius: 3,\n    backgroundColor: \"#7159c1\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 20\n  },\n  buttonText: {\n    color: \"#fff\"\n  },\n  avatar: {\n    width: 100,\n    height: 100,\n    borderRadius: 50\n  }\n});","map":{"version":3,"sources":["C:/ProvIna/mobile/src/pages/NewPost.js"],"names":["React","useState","Constants","Permissions","ImagePicker","Axios","Upload","avatar","setAvatar","imagePickerCall","platform","ios","askAsync","CAMERA_ROLL","status","alert","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","data","cancelled","uri","EnviarArquivo","api","post","headers","token","Data","NomeArquivo","nomeArquivo","Categoria","categoria","IdAluno_Arquivos","idAluno","console","error","uploadImage","FormData","append","type","log","styles","container","button","buttonText","StyleSheet","create","flex","justifyContent","alignItems","width","height","borderRadius","backgroundColor","marginTop","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, TouchableOpacity, Text, StyleSheet, Image } from \"react-native\";\r\n\r\nimport Constants from \"expo-constants\";\r\nimport * as Permissions from \"expo-permissions\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport Axios from \"axios\";\r\n\r\nexport default function Upload() {\r\n  \r\n  const [avatar, setAvatar] = useState();\r\n\r\n  async function imagePickerCall() {\r\n    \r\n    if (Constants.platform.ios) {\r\n      \r\n      const { status } = await Permissions.askAsync(Permissions.CAMERA_ROLL);\r\n\r\n      if (status !== \"granted\") {\r\n        alert(\"Nós precisamos dessa permissão.\");\r\n        return;\r\n      }\r\n    }\r\n\r\n    const data = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.All\r\n    });\r\n\r\n    if (data.cancelled) {\r\n      return;\r\n    }\r\n\r\n    if (!data.uri) {\r\n      return;\r\n    }\r\n\r\n    setAvatar(data);\r\n  }\r\n\r\n  async function EnviarArquivo() {\r\n\r\n    try {\r\n\r\n      await api.post('/arquivo', {\r\n\r\n        headers: {\r\n          'Authorization': token,\r\n          'Content-type': 'application/json'\r\n        },\r\n\r\n        Data: avatar.uri,\r\n        NomeArquivo: nomeArquivo,\r\n        Categoria: categoria,\r\n        IdAluno_Arquivos: idAluno\r\n\r\n      });\r\n\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  async function uploadImage() {\r\n    \r\n    const data = new FormData();\r\n\r\n    data.append(\"avatar\", {\r\n      uri: avatar.uri,\r\n      type: avatar.type\r\n    });\r\n\r\n    console.log(\"data\", data)\r\n    //await Axios.post(\"http://localhost:3333/files\", data);\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Image\r\n        source={{\r\n          uri: avatar\r\n            ? avatar.uri\r\n            : \"https://mltmpgeox6sf.i.optimole.com/w:761/h:720/q:auto/https://redbanksmilesnj.com/wp-content/uploads/2015/11/man-avatar-placeholder.png\"\r\n        }}\r\n        style={styles.avatar}\r\n      />\r\n\r\n      <TouchableOpacity style={styles.button} onPress={imagePickerCall}>\r\n        <Text style={styles.buttonText}>Escolher imagem</Text>\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity style={styles.button} onPress={uploadImage}>\r\n        <Text style={styles.buttonText}>Enviar imagem</Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  button: {\r\n    width: 150,\r\n    height: 50,\r\n    borderRadius: 3,\r\n    backgroundColor: \"#7159c1\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 20\r\n  },\r\n  buttonText: {\r\n    color: \"#fff\"\r\n  },\r\n  avatar: {\r\n    width: 100,\r\n    height: 100,\r\n    borderRadius: 50\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}