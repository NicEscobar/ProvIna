{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\ProvIna\\\\mobile\\\\src\\\\pages\\\\Home.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { Card, ListItem, Button, Icon } from \"react-native-elements\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport api from \"../api/api\";\nimport { color } from \"react-native-elements/dist/helpers\";\nimport RNFetchBlob from 'rn-fetch-blob';\n\nfunction Home(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      posts = _useState2[0],\n      setPosts = _useState2[1];\n\n  var IdAluno = navigation.state.params.IdAluno;\n\n  function SQL_BuscarTodosArquivos() {\n    return _regeneratorRuntime.async(function SQL_BuscarTodosArquivos$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            api.get(\"/arquivoTodos\", {}).then(function (Response) {\n              setPosts(Response.data);\n            }).catch(function (err) {\n              console.log(\"erro\", err);\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    SQL_BuscarTodosArquivos();\n  }, []);\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, posts.map(function (m) {\n    return React.createElement(View, {\n      style: styles.homePage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, React.createElement(Card, {\n      containerStyle: styles.cardBox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, React.createElement(View, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.cardHeader,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    }, React.createElement(Image, {\n      style: styles.postImage,\n      resizeMode: \"cover\",\n      source: {\n        uri: m.URLs\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }), React.createElement(View, {\n      style: styles.cardBody,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.cardTitle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 23\n      }\n    }, m.NomeArquivo), React.createElement(Text, {\n      style: styles.cardDate,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 23\n      }\n    }, m.DataCriacao), React.createElement(Text, {\n      style: styles.cardCategory,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 23\n      }\n    }, m.Categoria))), React.createElement(View, {\n      style: styles.cardFooter,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        navigation.navigate('Comment', {\n          IdArquivos: m.IdArquivos,\n          IdAluno: IdAluno\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, React.createElement(FontAwesome, {\n      name: \"align-justify\",\n      size: 20,\n      color: \"#FFF\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 23\n      }\n    })), React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        navigation.navigate(\"Comment\");\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, React.createElement(FontAwesome, {\n      name: \"arrow-alt-to-bottom\",\n      size: 20,\n      color: \"#FFF\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 23\n      }\n    })))))));\n  }), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.addPost,\n    onPress: function onPress() {\n      navigation.navigate(\"NewPost\", {\n        IdAluno: IdAluno\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, React.createElement(FontAwesome, {\n    name: \"plus-circle\",\n    size: 20,\n    color: \"#FFF\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    elevation: 8,\n    justifyContent: \"center\"\n  },\n  homePage: {\n    backgroundColor: '#000'\n  },\n  cardBox: {\n    borderRadius: 4,\n    borderColor: 'trasparent',\n    backgroundColor: \"rgb(18,18,18)\",\n    padding: 0\n  },\n  cardTitle: {\n    color: 'white',\n    fontSize: '35px',\n    marginLeft: 3\n  },\n  cardDate: {\n    color: 'white',\n    fontSize: '20px',\n    marginBottom: 5,\n    marginLeft: 3\n  },\n  cardCategory: {\n    color: 'white',\n    fontSize: '20px',\n    marginBottom: 5,\n    marginLeft: 3\n  },\n  Buttonlogin: {\n    borderRadius: 10,\n    justifyContent: \"center\",\n    paddingVertical: 20,\n    paddingHorizontal: 40\n  },\n  addPost: {\n    width: 50,\n    height: 50,\n    backgroundColor: \"#000\",\n    borderRadius: 100,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  postImage: {\n    width: \"50%\",\n    borderRadius: 2\n  },\n  parentWrapper: {\n    position: \"relative\"\n  },\n  cardHeader: {\n    flex: 2,\n    flexDirection: \"row\"\n  },\n  cardBody: {\n    flex: 2,\n    flexDirection: \"column\"\n  },\n  cardFooter: {\n    flex: 1,\n    margin: 2,\n    flexDirection: \"row\",\n    justifyContent: \"flex-end\",\n    padding: 10\n  }\n});\nexport default Home;","map":{"version":3,"sources":["C:/ProvIna/mobile/src/pages/Home.js"],"names":["React","useState","useEffect","Card","ListItem","Button","Icon","AsyncStorage","FontAwesome","api","color","RNFetchBlob","Home","navigation","posts","setPosts","IdAluno","state","params","SQL_BuscarTodosArquivos","get","then","Response","data","catch","err","console","log","map","m","styles","homePage","cardBox","cardHeader","postImage","uri","URLs","cardBody","cardTitle","NomeArquivo","cardDate","DataCriacao","cardCategory","Categoria","cardFooter","navigate","IdArquivos","addPost","StyleSheet","create","container","flex","elevation","justifyContent","backgroundColor","borderRadius","borderColor","padding","fontSize","marginLeft","marginBottom","Buttonlogin","paddingVertical","paddingHorizontal","width","height","alignItems","parentWrapper","position","flexDirection","margin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  Image,\r\n  Linking,\r\n} from \"react-native\";\r\nimport { Card, ListItem, Button, Icon } from \"react-native-elements\";\r\nimport { AsyncStorage } from \"react-native\";\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\n\r\nimport api from \"../api/api\";\r\nimport { color } from \"react-native-elements/dist/helpers\";\r\n\r\nimport RNFetchBlob from 'rn-fetch-blob';\r\n\r\nfunction Home({ navigation }) {\r\n  const [posts, setPosts] = useState([]);\r\n  const { IdAluno}  = navigation.state.params;\r\n\r\n  async function SQL_BuscarTodosArquivos() {\r\n    api\r\n      .get(\"/arquivoTodos\", {})\r\n      .then((Response) => {\r\n        setPosts(Response.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"erro\", err);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    SQL_BuscarTodosArquivos();\r\n  }, []);\r\n\r\n  return (\r\n    <View>\r\n      {posts.map((m) => {\r\n        return (\r\n          <View style={styles.homePage}>\r\n            <Card containerStyle={styles.cardBox}>\r\n              <View>\r\n                <View>\r\n                  <View style={styles.cardHeader}>\r\n                    <Image\r\n                      style={styles.postImage}\r\n                      resizeMode=\"cover\"\r\n                      source={{ uri: m.URLs }}\r\n                    />\r\n                    <View style={styles.cardBody}>\r\n                      <Text style={styles.cardTitle}>{m.NomeArquivo}</Text>\r\n                      <Text style={styles.cardDate}>{m.DataCriacao}</Text>\r\n                      <Text style={styles.cardCategory}>{m.Categoria}</Text>\r\n\r\n                    </View>\r\n                  </View>\r\n\r\n                  <View style={styles.cardFooter}>\r\n                    <TouchableOpacity\r\n                      onPress={() => {\r\n                        navigation.navigate('Comment',{ IdArquivos: m.IdArquivos, IdAluno: IdAluno  });\r\n                      }}\r\n                    >\r\n                      <FontAwesome\r\n                        name=\"align-justify\"\r\n                        size={20}\r\n                        color=\"#FFF\"\r\n                      ></FontAwesome>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      onPress={() => {\r\n                        navigation.navigate(\"Comment\");\r\n                      }}\r\n                    >\r\n                      <FontAwesome\r\n                        name=\"arrow-alt-to-bottom\"\r\n                        size={20}\r\n                        color=\"#FFF\"\r\n                      ></FontAwesome>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </View>\r\n              </View>\r\n            </Card>\r\n          </View>\r\n        );\r\n      })}\r\n      <View>\r\n        <TouchableOpacity\r\n          style={styles.addPost}\r\n          onPress={() => {\r\n            navigation.navigate(\"NewPost\", {IdAluno: IdAluno});\r\n          }}\r\n        >\r\n          <FontAwesome name=\"plus-circle\" size={20} color=\"#FFF\"></FontAwesome>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    elevation: 8,\r\n    justifyContent: \"center\",\r\n  },\r\n  homePage: {\r\n    backgroundColor: '#000',\r\n\r\n  },\r\n  cardBox: {\r\n    borderRadius: 4,\r\n    borderColor: 'trasparent',\r\n    backgroundColor: \"rgb(18,18,18)\",\r\n    padding: 0,\r\n  },\r\n  cardTitle: {\r\n    color: 'white',\r\n    fontSize: '35px',\r\n    marginLeft: 3,\r\n  },\r\n  cardDate: {\r\n    color: 'white',\r\n    fontSize: '20px',\r\n    marginBottom: 5,\r\n    marginLeft: 3,\r\n\r\n  },\r\n  cardCategory: {\r\n    color: 'white',\r\n    fontSize: '20px',\r\n    marginBottom: 5,\r\n    marginLeft: 3,\r\n  },\r\n  Buttonlogin: {\r\n    // elevation:  8,\r\n    borderRadius: 10,\r\n    justifyContent: \"center\",\r\n    paddingVertical: 20,\r\n    paddingHorizontal: 40,\r\n  },\r\n  addPost: {\r\n    width: 50,\r\n    height: 50,\r\n    backgroundColor: \"#000\",\r\n    borderRadius: 100,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    //marginLeft: 60\r\n  },\r\n\r\n  postImage: {\r\n    width: \"50%\",\r\n    borderRadius: 2,\r\n  },\r\n  parentWrapper: {\r\n    position: \"relative\",\r\n  },\r\n\r\n  cardHeader: {\r\n    flex: 2,\r\n    flexDirection: \"row\",\r\n  },\r\n  cardBody: {\r\n    flex: 2,\r\n    flexDirection: \"column\",\r\n  },\r\n\r\n  cardFooter: {\r\n    flex: 1,\r\n    margin: 2,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-end\",\r\n    padding: 10,\r\n  },\r\n});\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}