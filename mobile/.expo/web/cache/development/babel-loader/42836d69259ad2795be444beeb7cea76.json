{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\proviiina\\\\ProvIna\\\\mobile\\\\src\\\\pages\\\\NewPost.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport { Card, ListItem, Button, Icon } from \"react-native-elements\";\nimport ImagePicker from 'react-native-image-picker';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { FontAwesome } from \"@expo/vector-icons\";\nimport api from \"../api/api\";\n\nfunction NewPost(_ref) {\n  var navigation = _ref.navigation;\n  var IdAluno = navigation.state.params.IdAluno;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      nomeArquivo = _useState2[0],\n      setNomeArquivo = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      categoria = _useState4[0],\n      setCategoria = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      photo = _useState6[0],\n      setPhoto = _useState6[1];\n\n  function handleChoosePhoto() {\n    var option = {\n      noData: true\n    };\n\n    function EnviarArquivo(base64EncodedImage) {\n      return _regeneratorRuntime.async(function EnviarArquivo$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(api.post(\"/arquivo\", {\n                headers: {\n                  Authorization: \"\",\n                  \"Content-type\": \"application/json\"\n                },\n                Data: base64EncodedImage,\n                NomeArquivo: nomeArquivo,\n                Categoria: categoria,\n                IdAluno_Arquivos: IdAluno\n              }));\n\n            case 3:\n              _context.next = 8;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 5]], Promise);\n    }\n\n    return React.createElement(View, {\n      style: styles.newPostPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }\n    }, React.createElement(Card, {\n      containerStyle: styles.cardBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: styles.newPostHeader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.titles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    }, \"Nova Postagem\")), React.createElement(View, {\n      style: styles.newPostBody,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, React.createElement(View, {\n      style: styles.sendFileButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        handleChoosePhoto();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, React.createElement(FontAwesome, {\n      name: \"download\",\n      size: 90,\n      style: styles.btnNewItemDesign,\n      color: \"#FFF\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, React.createElement(Text, {\n      style: styles.titles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, \"Selecione o Arquivo\"))))), React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }), React.createElement(View, {\n      style: styles.newPostFooter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, React.createElement(Button, {\n      title: \"ENVIAR\",\n      size: \"sm\",\n      type: \"outline\",\n      color: \"(255, 255, 255, 0)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }))));\n  }\n\n  var styles = StyleSheet.create({\n    newPostPage: {\n      flex: 1,\n      justifyContent: \"flex-start\",\n      backgroundColor: \"#000\"\n    },\n    cardBox: {\n      borderRadius: 4,\n      borderColor: \"#00000000\",\n      backgroundColor: \"rgb(18,18,18)\",\n      padding: 0,\n      width: 600,\n      height: 250,\n      width: \"100%\",\n      alignItems: \"center\"\n    },\n    newPostHeader: {\n      flex: 1,\n      alignItems: \"center\",\n      margin: 5\n    },\n    sendFileButton: {\n      backgroundColor: \"#000\"\n    },\n    newPostBody: {\n      flex: 2,\n      padding: 5,\n      textAlign: \"center\"\n    },\n    newPostFooter: {\n      borderWidth: 2,\n      borderColor: \"#03DAC6\",\n      color: \"#00000000\",\n      justifyContent: \"center\",\n      marginHorizontal: 80,\n      marginVertical: 20,\n      paddingVertical: 10,\n      paddingHorizontal: 10\n    },\n    titles: {\n      fontSize: 30,\n      color: \"#fff\"\n    }\n  });\n}\n\nexport default NewPost;","map":{"version":3,"sources":["D:/proviiina/ProvIna/mobile/src/pages/NewPost.js"],"names":["React","useState","useEffect","Card","ListItem","Button","Icon","ImagePicker","FontAwesome","api","NewPost","navigation","IdAluno","state","params","nomeArquivo","setNomeArquivo","categoria","setCategoria","photo","setPhoto","handleChoosePhoto","option","noData","EnviarArquivo","base64EncodedImage","post","headers","Authorization","Data","NomeArquivo","Categoria","IdAluno_Arquivos","console","error","styles","newPostPage","cardBox","newPostHeader","titles","newPostBody","sendFileButton","btnNewItemDesign","newPostFooter","StyleSheet","create","flex","justifyContent","backgroundColor","borderRadius","borderColor","padding","width","height","alignItems","margin","textAlign","borderWidth","color","marginHorizontal","marginVertical","paddingVertical","paddingHorizontal","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Card, ListItem, Button, Icon } from \"react-native-elements\";\r\n\r\nimport ImagePicker from 'react-native-image-picker'\r\n\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  TextInput,\r\n  View,\r\n  SafeAreaView,\r\n  TouchableOpacity,\r\n  Image,\r\n  Linking,\r\n} from \"react-native\";\r\n\r\n//import { set } from \"react-native-reanimated\";\r\nimport { FontAwesome } from \"@expo/vector-icons\";\r\n\r\nimport api from \"../api/api\";\r\n\r\nfunction NewPost({ navigation }) {\r\n  const { IdAluno } = navigation.state.params;\r\n\r\n  const [nomeArquivo, setNomeArquivo] = useState(\"\");\r\n  const [categoria, setCategoria] = useState(\"\");\r\n\r\n  const [photo, setPhoto] = useState([]);\r\n\r\n    \r\n  function handleChoosePhoto(){\r\n    \r\n      const option = {\r\n        noData: true\r\n      };\r\n\r\n  async function EnviarArquivo(base64EncodedImage) {\r\n    try {\r\n      await api.post(\"/arquivo\", {\r\n        headers: {\r\n          Authorization: \"\",\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n\r\n        Data: base64EncodedImage,\r\n        NomeArquivo: nomeArquivo,\r\n        Categoria: categoria,\r\n        IdAluno_Arquivos: IdAluno,\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={styles.newPostPage}>\r\n      <Card containerStyle={styles.cardBox}>\r\n        <View style={styles.newPostHeader}>\r\n          <Text style={styles.titles}>Nova Postagem</Text>\r\n        </View>\r\n\r\n        <View style={styles.newPostBody}>\r\n          <View style={styles.sendFileButton}>\r\n            <TouchableOpacity\r\n              onPress={() => { handleChoosePhoto()\r\n              }}\r\n            >\r\n              <FontAwesome\r\n                name=\"download\"\r\n                size={90}\r\n                style={styles.btnNewItemDesign}\r\n                color=\"#FFF\"\r\n              >\r\n                <Text style={styles.titles}>Selecione o Arquivo</Text>\r\n              </FontAwesome>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n        <View>\r\n    \r\n        </View>\r\n        <View style={styles.newPostFooter}>\r\n          <Button\r\n            title=\"ENVIAR\"\r\n            size=\"sm\"\r\n            type=\"outline\"\r\n            color=\"(255, 255, 255, 0)\"\r\n          />\r\n        </View>\r\n      </Card>\r\n    </View>\r\n  );\r\n}\r\nconst styles = StyleSheet.create({\r\n  newPostPage: {\r\n    flex: 1,\r\n    justifyContent: \"flex-start\",\r\n    backgroundColor: \"#000\",\r\n  },\r\n  cardBox: {\r\n    borderRadius: 4,\r\n    borderColor: \"#00000000\",\r\n    backgroundColor: \"rgb(18,18,18)\",\r\n    padding: 0,\r\n    width: 600,\r\n    height: 250,\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n  },\r\n  newPostHeader: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    margin: 5,\r\n  },\r\n  sendFileButton: {\r\n    backgroundColor: \"#000\",\r\n  },\r\n  newPostBody: {\r\n    flex: 2,\r\n    padding: 5,\r\n    textAlign: \"center\",\r\n  },\r\n  newPostFooter: {\r\n    borderWidth: 2,\r\n    borderColor: \"#03DAC6\",\r\n    color: \"#00000000\",\r\n    justifyContent: \"center\",\r\n    marginHorizontal: 80,\r\n    marginVertical: 20,\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 10,\r\n  },\r\n  titles: {\r\n    fontSize: 30,\r\n    color: \"#fff\",\r\n  },\r\n});\r\n}\r\nexport default NewPost;\r\n"]},"metadata":{},"sourceType":"module"}